# 프론트엔드 CI/CD 파이프라인
# frontend/ 폴더 변경 시 자동으로 Docker 이미지 빌드 및 배포
name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ master ]
    paths:
      - 'frontend/**'   # 프론트엔드 코드 변경 시 실행
      - 'shared/**'     # 공통 코드 변경 시 실행
      - '.github/workflows/frontend-ci.yml' # 이 워크플로우 파일 변경 시 실행
  pull_request:
    branches: [ master ]
    paths:
      - 'frontend/**'
      - 'shared/**'
      - '.github/workflows/frontend-ci.yml' # 이 워크플로우 파일 변경 시 실행

env:
  DOCKER_IMAGE: dorrry/k8s-gitops-app-frontend
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PERSONAL_TOKEN }}
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=sha,prefix=
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max
        
    - name: Image digest
      run: echo "${{ steps.meta.outputs.tags }}"
      
    - name: Update frontend deployment image tag
      if: github.ref == 'refs/heads/master'
      run: |
        # Git 설정
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 이미지 태그 업데이트 (SHA 태그 사용)
        IMAGE_SHA=$(echo "${{ steps.meta.outputs.tags }}" | grep -o '[a-f0-9]\{7\}' | head -1)
        sed -i "s|image: .*|image: ${{ env.DOCKER_IMAGE }}:$IMAGE_SHA|g" k8s/frontend-deployment.yml
        
        # 변경사항 확인 후 커밋
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add k8s/frontend-deployment.yml
          git commit -m "Auto-deploy frontend: Update image to $IMAGE_SHA [skip ci]"
          git pull origin master --rebase  # 원격 변경사항 먼저 가져오기
          git push origin master
          echo "Frontend deployment updated with image: ${{ env.DOCKER_IMAGE }}:$IMAGE_SHA"
        fi
